{
  "title": "Next.js + Docker + Github Action + GCP를 활용한 CI/CD 자동화",
  "date": "2023-11-24",
  "description": "CI/CD 자동화",
  "tag": "React",
  "body": {
    "raw": "\n### Next.js + Docker + Github Action + GCP를 활용한 CI/CD 자동화\n\nnext.js 프로젝트를 배포하려면 기존에는 vercel을 이용해서 쉽게 배포할 수 있었지만, 개인이 아닌 단체로 사용하는 경우 요금이 엄청나기 때문에 만약, 사내에서 next 프로젝트를 배포하게 되면 돈이 낭비될 것이라고 생각했다.\n\n그래서 vercel이 아니라 다른 방법으로 CI/CD를 구축하는 방법을 찾던 중, 이전부터 도커와 github action을 이용해서 배포해보고 싶다는 생각이 들어서 해봤다.\n\n만약 next가 아닌 순수 react 프로젝트라면 Nginx를 이용해야했지만, next는 serverless이기 때문에 별도로 nginx를 사용하지 않아도 된다.\n\n개인 사내 서버에 배포하기보단 테스트 겸 사이드 프로젝트에 사용하기 위해서는 외부(집)에서도 접근이 용이 해야하기 때문에, 개인 GCP (Google Cloud Platform)을 이용했다.\n\n우선 docker을 사용하기 위해선, dockerfile을 만들어줘야한다.\n\n```yml\nFROM node:18 AS builder\n\n# Set working directory\nWORKDIR /app\n\n# Copy package.json and yarn.lock for utilising Docker cache\nCOPY package.json yarn.lock ./\n\n# Install dependencies\nRUN yarn install --frozen-lockfile\n\n# Copy the rest of your app's source code\nCOPY . .\n\n# Build app\nRUN yarn build\n\n# ---- Run Stage ----\nFROM node:18 AS runner\n\n# Set working directory\nWORKDIR /app\n\n# Copy over the artifacts from the build stage\n# COPY --from=builder /app ./\nCOPY --from=builder /app/.next/standalone ./\nCOPY --from=builder /app/.next/static ./.next/static\nCOPY --from=builder /app/public ./public\nCOPY --from=builder /app/node_modules ./node_modules\nCOPY --from=builder /app/package.json ./package.json\n# Start app\nCMD [\"sh\", \"-c\", \"yarn start -p $PORT\"]\n\n```\n\n---\n\nnode 18버전을 사용했고, 유동적으로 포트를 받기 위해서 위에처럼 변수로 받아서 실행할 수 있게 해줬다.\n\n자세히 보면, COPY --from=builder /app/.next/standalone ./라는 명렁어가 있는데,\n\n```ts\n/** @type {import('next').NextConfig} */\nconst nextConfig = {\n  output: 'standalone',\n};\n\nmodule.exports = nextConfig;\n```\n\n---\n\nnext.config 설정에서 standalone를 해줬기 때문이다. 해당 설정을 해주면 도커 파일이 작아져 배포하는 시간 줄어든다.\n\n```yml\n# .dockerignore\n\nnode_modules\n.next\ndockerfile\n.dockerignore\n.git\n.gitignore\nREADME.md\n```\n\n---\n\n그리고 dockerignore를 이용해서 도커파일에 포함하지 않을 파일들을 입력해준다.\n\n```yml\n\nname: CI/CD workflow\n\non:\npush:\nbranches: [main]\n\njobs:\nbuild-and-deploy:\nruns-on: ubuntu-latest\n\n    steps:\n      - name: Check out code\n        uses: actions/checkout@v2\n\n      - name: Set up Docker Buildx\n        uses: docker/setup-buildx-action@v1\n\n      - name: Login to Google Container Registry\n        uses: docker/login-action@v1\n        with:\n          registry: gcr.io\n          username: _json_key\n          password: ${{ secrets.GCR_JSON_KEY }}\n\n      - name: Build and push Docker image\n        uses: docker/build-push-action@v2\n        with:\n          context: .\n          push: true\n          tags: gcr.io/${{ secrets.GCR_ID }}/petmunity-fe:latest\n\n      - name: Setup Google Cloud SDK\n        uses: google-github-actions/setup-gcloud@v0.3.0\n        with:\n          project_id: ${{ secrets.GCR_ID }} # 여기에 Google Cloud 프로젝트 ID를 입력하세요.\n          service_account_key: ${{ secrets.GCR_JSON_KEY }}\n          export_default_credentials: true\n\n      - name: Deploy to Google Cloud Run\n        run: |\n          gcloud run deploy petmunity-fe --image gcr.io/${{ secrets.GCR_ID }}/petmunity-fe:latest --region asia-northeast1 --platform managed --allow-unauthenticated\n\n```\n\n---\n\n다음으로 github action을 사용하기위한 yml이다.\n\nmain 브랜치로 푸시되거나 머지되면 배포가 되야하기 때문에\n\npush: branches: [main]를 입력해줬다.\n\nGoogle Cloud를 이용했기 때문에 Google Cloud SDK를 추가해주는 부분도 입력해주었다.\n\n해당 코드를 이용해서 main 브랜치로 올리게 되면 자동 배포가 가능하게 된다.\n\n기존에는 vercel을 이용해서 배포만 했어서 너무 편했지만, 해당 실습을 하면서 도커와 github action이 어떤 식으로 작동하는 지 알게 되는 좋은 경험이었다.\n",
    "code": "var Component=(()=>{var u=Object.create;var a=Object.defineProperty;var p=Object.getOwnPropertyDescriptor;var g=Object.getOwnPropertyNames;var h=Object.getPrototypeOf,m=Object.prototype.hasOwnProperty;var C=(o,n)=>()=>(n||o((n={exports:{}}).exports,n),n.exports),x=(o,n)=>{for(var t in n)a(o,t,{get:n[t],enumerable:!0})},c=(o,n,t,i)=>{if(n&&typeof n==\"object\"||typeof n==\"function\")for(let r of g(n))!m.call(o,r)&&r!==t&&a(o,r,{get:()=>n[r],enumerable:!(i=p(n,r))||i.enumerable});return o};var f=(o,n,t)=>(t=o!=null?u(h(o)):{},c(n||!o||!o.__esModule?a(t,\"default\",{value:o,enumerable:!0}):t,o)),k=o=>c(a({},\"__esModule\",{value:!0}),o);var s=C((O,l)=>{l.exports=_jsx_runtime});var _={};x(_,{default:()=>D,frontmatter:()=>b});var e=f(s()),b={title:\"Next.js + Docker + Github Action + GCP\\uB97C \\uD65C\\uC6A9\\uD55C CI/CD \\uC790\\uB3D9\\uD654\",date:new Date(1700784e6),description:\"CI/CD \\uC790\\uB3D9\\uD654\",tag:\"React\"};function d(o){let n=Object.assign({h3:\"h3\",p:\"p\",pre:\"pre\",code:\"code\",hr:\"hr\"},o.components);return(0,e.jsxs)(e.Fragment,{children:[(0,e.jsx)(n.h3,{children:\"Next.js + Docker + Github Action + GCP\\uB97C \\uD65C\\uC6A9\\uD55C CI/CD \\uC790\\uB3D9\\uD654\"}),`\n`,(0,e.jsx)(n.p,{children:\"next.js \\uD504\\uB85C\\uC81D\\uD2B8\\uB97C \\uBC30\\uD3EC\\uD558\\uB824\\uBA74 \\uAE30\\uC874\\uC5D0\\uB294 vercel\\uC744 \\uC774\\uC6A9\\uD574\\uC11C \\uC27D\\uAC8C \\uBC30\\uD3EC\\uD560 \\uC218 \\uC788\\uC5C8\\uC9C0\\uB9CC, \\uAC1C\\uC778\\uC774 \\uC544\\uB2CC \\uB2E8\\uCCB4\\uB85C \\uC0AC\\uC6A9\\uD558\\uB294 \\uACBD\\uC6B0 \\uC694\\uAE08\\uC774 \\uC5C4\\uCCAD\\uB098\\uAE30 \\uB54C\\uBB38\\uC5D0 \\uB9CC\\uC57D, \\uC0AC\\uB0B4\\uC5D0\\uC11C next \\uD504\\uB85C\\uC81D\\uD2B8\\uB97C \\uBC30\\uD3EC\\uD558\\uAC8C \\uB418\\uBA74 \\uB3C8\\uC774 \\uB0AD\\uBE44\\uB420 \\uAC83\\uC774\\uB77C\\uACE0 \\uC0DD\\uAC01\\uD588\\uB2E4.\"}),`\n`,(0,e.jsx)(n.p,{children:\"\\uADF8\\uB798\\uC11C vercel\\uC774 \\uC544\\uB2C8\\uB77C \\uB2E4\\uB978 \\uBC29\\uBC95\\uC73C\\uB85C CI/CD\\uB97C \\uAD6C\\uCD95\\uD558\\uB294 \\uBC29\\uBC95\\uC744 \\uCC3E\\uB358 \\uC911, \\uC774\\uC804\\uBD80\\uD130 \\uB3C4\\uCEE4\\uC640 github action\\uC744 \\uC774\\uC6A9\\uD574\\uC11C \\uBC30\\uD3EC\\uD574\\uBCF4\\uACE0 \\uC2F6\\uB2E4\\uB294 \\uC0DD\\uAC01\\uC774 \\uB4E4\\uC5B4\\uC11C \\uD574\\uBD24\\uB2E4.\"}),`\n`,(0,e.jsx)(n.p,{children:\"\\uB9CC\\uC57D next\\uAC00 \\uC544\\uB2CC \\uC21C\\uC218 react \\uD504\\uB85C\\uC81D\\uD2B8\\uB77C\\uBA74 Nginx\\uB97C \\uC774\\uC6A9\\uD574\\uC57C\\uD588\\uC9C0\\uB9CC, next\\uB294 serverless\\uC774\\uAE30 \\uB54C\\uBB38\\uC5D0 \\uBCC4\\uB3C4\\uB85C nginx\\uB97C \\uC0AC\\uC6A9\\uD558\\uC9C0 \\uC54A\\uC544\\uB3C4 \\uB41C\\uB2E4.\"}),`\n`,(0,e.jsx)(n.p,{children:\"\\uAC1C\\uC778 \\uC0AC\\uB0B4 \\uC11C\\uBC84\\uC5D0 \\uBC30\\uD3EC\\uD558\\uAE30\\uBCF4\\uB2E8 \\uD14C\\uC2A4\\uD2B8 \\uACB8 \\uC0AC\\uC774\\uB4DC \\uD504\\uB85C\\uC81D\\uD2B8\\uC5D0 \\uC0AC\\uC6A9\\uD558\\uAE30 \\uC704\\uD574\\uC11C\\uB294 \\uC678\\uBD80(\\uC9D1)\\uC5D0\\uC11C\\uB3C4 \\uC811\\uADFC\\uC774 \\uC6A9\\uC774 \\uD574\\uC57C\\uD558\\uAE30 \\uB54C\\uBB38\\uC5D0, \\uAC1C\\uC778 GCP (Google Cloud Platform)\\uC744 \\uC774\\uC6A9\\uD588\\uB2E4.\"}),`\n`,(0,e.jsx)(n.p,{children:\"\\uC6B0\\uC120 docker\\uC744 \\uC0AC\\uC6A9\\uD558\\uAE30 \\uC704\\uD574\\uC120, dockerfile\\uC744 \\uB9CC\\uB4E4\\uC5B4\\uC918\\uC57C\\uD55C\\uB2E4.\"}),`\n`,(0,e.jsx)(n.pre,{children:(0,e.jsx)(n.code,{className:\"language-yml\",children:`FROM node:18 AS builder\n\n# Set working directory\nWORKDIR /app\n\n# Copy package.json and yarn.lock for utilising Docker cache\nCOPY package.json yarn.lock ./\n\n# Install dependencies\nRUN yarn install --frozen-lockfile\n\n# Copy the rest of your app's source code\nCOPY . .\n\n# Build app\nRUN yarn build\n\n# ---- Run Stage ----\nFROM node:18 AS runner\n\n# Set working directory\nWORKDIR /app\n\n# Copy over the artifacts from the build stage\n# COPY --from=builder /app ./\nCOPY --from=builder /app/.next/standalone ./\nCOPY --from=builder /app/.next/static ./.next/static\nCOPY --from=builder /app/public ./public\nCOPY --from=builder /app/node_modules ./node_modules\nCOPY --from=builder /app/package.json ./package.json\n# Start app\nCMD [\"sh\", \"-c\", \"yarn start -p $PORT\"]\n\n`})}),`\n`,(0,e.jsx)(n.hr,{}),`\n`,(0,e.jsx)(n.p,{children:\"node 18\\uBC84\\uC804\\uC744 \\uC0AC\\uC6A9\\uD588\\uACE0, \\uC720\\uB3D9\\uC801\\uC73C\\uB85C \\uD3EC\\uD2B8\\uB97C \\uBC1B\\uAE30 \\uC704\\uD574\\uC11C \\uC704\\uC5D0\\uCC98\\uB7FC \\uBCC0\\uC218\\uB85C \\uBC1B\\uC544\\uC11C \\uC2E4\\uD589\\uD560 \\uC218 \\uC788\\uAC8C \\uD574\\uC92C\\uB2E4.\"}),`\n`,(0,e.jsx)(n.p,{children:\"\\uC790\\uC138\\uD788 \\uBCF4\\uBA74,\\xA0COPY --from=builder /app/.next/standalone ./\\uB77C\\uB294 \\uBA85\\uB801\\uC5B4\\uAC00 \\uC788\\uB294\\uB370,\"}),`\n`,(0,e.jsx)(n.pre,{children:(0,e.jsx)(n.code,{className:\"language-ts\",children:`/** @type {import('next').NextConfig} */\nconst nextConfig = {\n  output: 'standalone',\n};\n\nmodule.exports = nextConfig;\n`})}),`\n`,(0,e.jsx)(n.hr,{}),`\n`,(0,e.jsx)(n.p,{children:\"next.config \\uC124\\uC815\\uC5D0\\uC11C\\xA0standalone\\uB97C \\uD574\\uC92C\\uAE30 \\uB54C\\uBB38\\uC774\\uB2E4. \\uD574\\uB2F9 \\uC124\\uC815\\uC744 \\uD574\\uC8FC\\uBA74 \\uB3C4\\uCEE4 \\uD30C\\uC77C\\uC774 \\uC791\\uC544\\uC838 \\uBC30\\uD3EC\\uD558\\uB294 \\uC2DC\\uAC04 \\uC904\\uC5B4\\uB4E0\\uB2E4.\"}),`\n`,(0,e.jsx)(n.pre,{children:(0,e.jsx)(n.code,{className:\"language-yml\",children:`# .dockerignore\n\nnode_modules\n.next\ndockerfile\n.dockerignore\n.git\n.gitignore\nREADME.md\n`})}),`\n`,(0,e.jsx)(n.hr,{}),`\n`,(0,e.jsx)(n.p,{children:\"\\uADF8\\uB9AC\\uACE0\\xA0dockerignore\\uB97C \\uC774\\uC6A9\\uD574\\uC11C \\uB3C4\\uCEE4\\uD30C\\uC77C\\uC5D0 \\uD3EC\\uD568\\uD558\\uC9C0 \\uC54A\\uC744 \\uD30C\\uC77C\\uB4E4\\uC744 \\uC785\\uB825\\uD574\\uC900\\uB2E4.\"}),`\n`,(0,e.jsx)(n.pre,{children:(0,e.jsx)(n.code,{className:\"language-yml\",children:`\nname: CI/CD workflow\n\non:\npush:\nbranches: [main]\n\njobs:\nbuild-and-deploy:\nruns-on: ubuntu-latest\n\n    steps:\n      - name: Check out code\n        uses: actions/checkout@v2\n\n      - name: Set up Docker Buildx\n        uses: docker/setup-buildx-action@v1\n\n      - name: Login to Google Container Registry\n        uses: docker/login-action@v1\n        with:\n          registry: gcr.io\n          username: _json_key\n          password: \\${{ secrets.GCR_JSON_KEY }}\n\n      - name: Build and push Docker image\n        uses: docker/build-push-action@v2\n        with:\n          context: .\n          push: true\n          tags: gcr.io/\\${{ secrets.GCR_ID }}/petmunity-fe:latest\n\n      - name: Setup Google Cloud SDK\n        uses: google-github-actions/setup-gcloud@v0.3.0\n        with:\n          project_id: \\${{ secrets.GCR_ID }} # \\uC5EC\\uAE30\\uC5D0 Google Cloud \\uD504\\uB85C\\uC81D\\uD2B8 ID\\uB97C \\uC785\\uB825\\uD558\\uC138\\uC694.\n          service_account_key: \\${{ secrets.GCR_JSON_KEY }}\n          export_default_credentials: true\n\n      - name: Deploy to Google Cloud Run\n        run: |\n          gcloud run deploy petmunity-fe --image gcr.io/\\${{ secrets.GCR_ID }}/petmunity-fe:latest --region asia-northeast1 --platform managed --allow-unauthenticated\n\n`})}),`\n`,(0,e.jsx)(n.hr,{}),`\n`,(0,e.jsx)(n.p,{children:\"\\uB2E4\\uC74C\\uC73C\\uB85C github action\\uC744 \\uC0AC\\uC6A9\\uD558\\uAE30\\uC704\\uD55C yml\\uC774\\uB2E4.\"}),`\n`,(0,e.jsx)(n.p,{children:\"main \\uBE0C\\uB79C\\uCE58\\uB85C \\uD478\\uC2DC\\uB418\\uAC70\\uB098 \\uBA38\\uC9C0\\uB418\\uBA74 \\uBC30\\uD3EC\\uAC00 \\uB418\\uC57C\\uD558\\uAE30 \\uB54C\\uBB38\\uC5D0\"}),`\n`,(0,e.jsx)(n.p,{children:\"push: branches: [main]\\uB97C \\uC785\\uB825\\uD574\\uC92C\\uB2E4.\"}),`\n`,(0,e.jsx)(n.p,{children:\"Google Cloud\\uB97C \\uC774\\uC6A9\\uD588\\uAE30 \\uB54C\\uBB38\\uC5D0\\xA0Google Cloud SDK\\uB97C \\uCD94\\uAC00\\uD574\\uC8FC\\uB294 \\uBD80\\uBD84\\uB3C4 \\uC785\\uB825\\uD574\\uC8FC\\uC5C8\\uB2E4.\"}),`\n`,(0,e.jsx)(n.p,{children:\"\\uD574\\uB2F9 \\uCF54\\uB4DC\\uB97C \\uC774\\uC6A9\\uD574\\uC11C main \\uBE0C\\uB79C\\uCE58\\uB85C \\uC62C\\uB9AC\\uAC8C \\uB418\\uBA74 \\uC790\\uB3D9 \\uBC30\\uD3EC\\uAC00 \\uAC00\\uB2A5\\uD558\\uAC8C \\uB41C\\uB2E4.\"}),`\n`,(0,e.jsx)(n.p,{children:\"\\uAE30\\uC874\\uC5D0\\uB294 vercel\\uC744 \\uC774\\uC6A9\\uD574\\uC11C \\uBC30\\uD3EC\\uB9CC \\uD588\\uC5B4\\uC11C \\uB108\\uBB34 \\uD3B8\\uD588\\uC9C0\\uB9CC, \\uD574\\uB2F9 \\uC2E4\\uC2B5\\uC744 \\uD558\\uBA74\\uC11C \\uB3C4\\uCEE4\\uC640 github action\\uC774 \\uC5B4\\uB5A4 \\uC2DD\\uC73C\\uB85C \\uC791\\uB3D9\\uD558\\uB294 \\uC9C0 \\uC54C\\uAC8C \\uB418\\uB294 \\uC88B\\uC740 \\uACBD\\uD5D8\\uC774\\uC5C8\\uB2E4.\"})]})}function y(o={}){let{wrapper:n}=o.components||{};return n?(0,e.jsx)(n,Object.assign({},o,{children:(0,e.jsx)(d,o)})):d(o)}var D=y;return k(_);})();\n;return Component;"
  },
  "_id": "34.md",
  "_raw": {
    "sourceFilePath": "34.md",
    "sourceFileName": "34.md",
    "sourceFileDir": ".",
    "contentType": "markdown",
    "flattenedPath": "34"
  },
  "type": "Post"
}